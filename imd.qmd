---
title: "Index of Multiple Deprivation (IMD)"
---

# Index of Multiple Deprivation

The latest available IMD data for England is from 2019.

IMD is very useful for categorising the area a person lives in for deprivation. Deprivation is by country and do not include the other nations. Deciles are the most commonly used way of referring to IMD and are taken from the scores which are ordered and then cut into 10. For deciles the 1 is the most deprived area and 10 is the least deprived.

[Wikipedia link](https://en.wikipedia.org/wiki/Multiple_deprivation_index)\
[English IMD 2015 - Guidance](https://assets.publishing.service.gov.uk/media/5a7f0e5ded915d74e33f410b/English_Index_of_Multiple_Deprivation_2015_-_Guidance.pdf)

# Finding the IMD for an address

To get IMD scores or deciles for a local data a join will be needed to the postcode table (like a directory of postcodes) found:

<https://digital.nhs.uk/services/organisation-data-service/data-downloads/ods-postcode-files>

and then to the IMD data:

<https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019>

-   Select File 7 for the dataset.

Other data is available from this dataset including IDAOPI which relates to only older people.

Note that the column headers change, in 2015 it was LADistrictCode2013 and in 2019 it is LADistrictCode2019. Also LADistrictName2013 has become LADistrictName2019.

### Postcode spaces

Postcode lengths vary in original data depending on whether one or two spaces are used between the parts. Consequently, it is always better when joining by postcodes to remove the spaces altogether.

In SQL this would be with the code:

`REPLACE(postcode, ' ', '')`

in R it can be

```{r}
#| label: postcode-no-space
postcode <- "NG16 1AA"

# base R
gsub(" ", "", postcode)

# {stringr} also available in {tidyverse}
stringr::str_remove(postcode, " ")
```

### Partial postcodes

Partial postcodes are sometimes provided to protect the data and may be the first part (before spaces) and 1 or 2 characters from the second part. This will not give a sufficiently reliable IMD score.

# Example join code (SQL)

To get the IMD score the LSOA (Lower Super Output Area) code is required which is taken from the full postcode.

This code will not run and is dependent on the naming conventions of the SQL server. The column names of LSOA11 and `LSOAcode2011` will have come from the data sources. The column `PostCode_space` has been added to the original data.

```{sql}
#| label: sql-example-code
#| eval: false
SELECT imd.*
FROM DIM_AI.PatientData AS p
LEFT JOIN DIM_AI.PostCodes AS pc ON p.PostCode = pc.PostCode_space
LEFT JOIN DIM_AI.IMD AS i ON pc.PC.LSOA11 = i.LSOAcode2011
```

# Creating quintiles

To be able to join to the data scores will need to be put into quintiles (group of 5) rather than deciles (group of 10). Where the number of areas divides into the number of quintiles an equal number of areas can be assigned to each quintile. When it does not divide however, a choice must be made as to which quintiles should have a larger number of areas. The Office of Health Improvement & Disparities recommends using the following approach in their [Technical Guide to Assigning Deprivation Categories](https://fingertips.phe.org.uk/documents/OHID%20Guidance%20-%20Assigning%20Deprivation%20Categories.pdf):

-   Divide the number of small areas within the higher geography by the number of deprivation categories required (up to a maximum of 10), giving an integer and fractional part.

-   The integer-part of this number represents the minimum number of small areas that will be assigned to each deprivation category within each higher geography.

-   The below tables then shows which deprivation categories should be assigned additional small areas based on the fractional part of this number and the number of quintiles being used.

```{r}
#| echo: false
#| tbl-subcap: 
#|     - "Deciles"
#|     - "Quintiles"
#|     - "Quartiles"
#| layout-ncol: 3

library(gt)

# decile

data.frame("Number after decimal point"	=
             c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8),
           "Deciles receiving an extra area" = 
             c("None","1","1, 6","1, 4, 7","1, 3, 6, 8",
               "1, 3, 5, 7, 9","1, 2, 4, 6, 7, 9",
               "1, 2, 3, 5, 6, 8, 9","1, 2, 3, 4, 6, 7, 8, 9"),
              check.names = F) |>
  gt() |>
  tab_header(title = md("Deciles"))

# quintile

data.frame("Number after decimal point"	=
             c(0,0.2,0.4,0.6,0.8),
           "Quintiles receiving an extra area" =
             c("None","1","1, 3","1, 2, 4","1, 2, 3, 4"),
           check.names = F) |>
  gt() |>
  tab_header(title = md("Quintiles"))

# quantile

gt(data.frame("Number after decimal point"	=
                c(0,0.25,0.5,0.75),
              "Quantiles receiving an extra area" =
                c("None","1","1, 3","1, 2, 3"),
              check.names = F)) |>
  gt() |>
  tab_header(title = md("Quantiles"))

```

### Quintiles in SQL

```{sql}
#| label: sql-quintile
#| eval: false
SELECT DISTINCT IMDDecile,
FLOOR((IMDDecile-1)/2) + 1 AS IMDQuintile
FROM DIM_AI.IMD
ORDER BY IMDDecile
```

### Quintiles in R

The `PHEindicatormethods` provides a convenient function that can be used in R to generate quintiles.

```{r}
#| label: load-packages
#| include: false

library(tidyverse)
library(PHEindicatormethods)
```

```{r }
#| label: r-quintile

df <- data.frame(
  region = as.character(rep(c("Region1","Region2","Region3","Region4"),
                               each=250)),
  smallarea = as.character(paste0("Area",seq_along(1:1000))),
  vals = as.numeric(sample(200, 1000, replace = TRUE)),
  stringsAsFactors = FALSE)

# assign small areas to deciles across whole data frame
PHEindicatormethods::phe_quantile(df, vals, type = "standard")
```

# Creating local IMDs

In areas like Nottingham/Nottinghamshire the differences between the LSOA areas is diminished when ranked against England as a whole, but when ranked locally, the variation is much more pronounced. It is possible to take the original scores and apply deciles or quintiles to those scores in order to create a local IMD.

## Local IMD creation in SQL

To apply a rank use the windows partition function `ROW_NUMBER() OVER(ORDER BY IMDRank)` to create a new ranking score and `NTILE(10) OVER (ORDER BY IMDRank)` to create new deciles.

## Local IMD creation in R

```{r}
#| label: localRank
#| eval: false

library(tidyverse)
library(PostcodesioR)
library(NHSRpostcodetools) # installed from GitHub not CRAN
library(NHSRpopulation) # installed from GitHub not CRAN
library(janitor)

# Generate random example postcodes
# Restricted to NG postcodes from Nottinghamshire because postcodes are drawn
# from all nations and don't validate within the {NHSRpopulation} package
# currently
postcodes <- purrr::map_chr(
  1:10,
  .f = ~ PostcodesioR::random_postcode("NG16") |>
    purrr::pluck(1)
)

# Create a tibble
tibble_postcodes <- dplyr::tibble(
  random_postcodes = postcodes,
)

NHSRpopulation::get_data(tibble_postcodes, 
                         column = "random_postcodes", 
                         url_type = "imd") |> 
  dplyr::select(random_postcodes,
                new_postcode,
                imd_decile,
                imd_rank,
                imd_score) |> 
  mutate(imd_decile_local = ntile(-imd_score, n = 10)) # creating new deciles from the data provided
```

## LSOAs - by postcode and by Local Authority/District

Note that the previous code example was a very small selection of\
postcodes and would require much more data to create locally derived deciles.

This usually comes from whole LSOA areas that are linked to Local Authorities/ Districts and not via row level data postcodes.

For example, Nottinghamshire Healthcare NHS Foundation Trust covers several Local Authority areas in its services and so organisations like this have to find all the geographic areas that the services cover.

::: {.callout-warning collapse="false" appearance="default" icon="true"}
## Local Authority and District LSOAs are not in {NHSRpostcodetools} (warning)

Currently (March 2024) the package {NHSRpopulation} which relies upon package for postcodes {NHSRpostcodetools} and a join to the IMD data via LSOAs does not have details for Local Authority LSOAs.
:::

There are two local authorities in the service area of Nottinghamshire Healthcare NHS Foundation Trust: Nottingham City Local Authority and several Nottinghamshire County Council LA areas. \# often have their data combined, particularly for the Provider \# Trusts like Nottinghamshire Healthcare NHS Foundation Trust.

```{r define-las}
# Define code for Nottingham City LA
la_code_nott_city <- c("E06000018")

# Adapted from a blog:
# https://cdu-data-science-team.github.io/team-blog/posts/2021-05-14-index-of-multiple-deprivation/#imd-in-sql)
la_code_notts_county <- tibble::tribble(
  ~`LSOAcode2011`, ~`LSOAname2011`, ~`LADistrictCode2019`, ~`LADistrictName2019`,
  "E01013812", "Nottingham 018C", "E06000018", "Nottingham",
  "E01013814", "Nottingham 022B", "E06000018", "Nottingham",
  "E01013810", "Nottingham 018A", "E06000018", "Nottingham",
  "E01013811", "Nottingham 018B", "E06000018", "Nottingham",
  "E01013815", "Nottingham 022C", "E06000018", "Nottingham"
) |> 
  dplyr::select(LSOAcode2011) |> 
  dplyr::pull()

# Combine all districts into one object
la_code_nott_city_notts_county <- c(la_code_nott_city, la_code_notts_county)

la_code_nott_city_notts_county 
```

# Other useful links

<https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/464430/English_Index_of_Multiple_Deprivation_2015_-_Guidance.pdf>

<https://fingertips.phe.org.uk/search/imd>

<http://dclgapps.communities.gov.uk/imd/idmap.html>

Technical report for 2019: <https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/833951/IoD2019_Technical_Report.pdf>

Example Shiny app from [Trafford Data Lab](https://trafforddatalab.shinyapps.io/imd19/) with published code on [GitHub](https://github.com/traffordDataLab/imd19/blob/master/app.R).

# Referencing IMD in a paper or research

## Suggested citation text

Ministry of Housing, Communities and Local Government. English Indices of Deprivation 2015. <https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019> (Accessed 22 March 2024)
